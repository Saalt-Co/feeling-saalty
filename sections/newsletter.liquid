{{ 'component-newsletter.css' | asset_url | stylesheet_tag }}
{{ 'newsletter-section.css' | asset_url | stylesheet_tag }}

{%- liquid
  if section.settings.theme_color_text != 'theme_default'
    assign color_class = section.settings.theme_color_text | slice: -1, 1
    assign border_var = '--palette-color-' | append: color_class
  endif
-%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  #section-{{ section.id }} form input.field__input {
    background-color: rgba(var(--color-site-background), {{ section.settings.input_opacity }}%);
  }
  {% if section.settings.theme_color_text != 'theme_default' %}
  #section-{{ section.id }} .field::after {
    box-shadow: 0 0 0 var(--inputs-border-width) rgba(var({{ border_var }}), var(--inputs-border-opacity));
  }
  #section-{{ section.id }} .field:hover.field:after {
    box-shadow: 0 0 0 calc(0.1rem + var(--inputs-border-width))
    rgba(var({{ border_var }}), var(--inputs-border-opacity));
  }
  #section-{{ section.id }} .field__input:focus-visible, #section-{{ section.id }} .field__input:focus {
    box-shadow: 0 0 0 calc(0.1rem + var(--inputs-border-width)) rgba(var({{ border_var }}));
  }
  {% endif %}
{%- endstyle -%}

<div
  id="section-{{ section.id }}"
  class="newsletter center {% if section.settings.full_width == false %}newsletter--narrow page-width{% endif %}"
>
  <div class="newsletter__wrapper{% if section.settings.theme_color_background != 'theme_default' %} {{ section.settings.theme_color_background }}{% endif %}{% if section.settings.theme_color_text != 'theme_default' %} {{ section.settings.theme_color_text }} svg-color-fill{% endif %} content-container isolate{% if section.settings.full_width %} content-container--full-width{% endif %} section-{{ section.id }}-padding">
    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when '@app' -%}
          {% render block %}
        {%- when 'heading' -%}
          <h2
            class="inline-richtext {{ block.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
            {{ block.shopify_attributes }}
            {% if settings.animations_reveal_on_scroll %}
              data-cascade
            {% endif %}
          >
            {{ block.settings.heading }}
          </h2>
        {%- when 'paragraph' -%}
          <div
            class="newsletter__subheading rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
            {{ block.shopify_attributes }}
            {% if settings.animations_reveal_on_scroll %}
              data-cascade
            {% endif %}
          >
            {{ block.settings.text }}
          </div>
        {%- when 'email_form' -%}
          <div {{ block.shopify_attributes }}>
            {% form 'customer', class: 'newsletter-form' %}
              <input type="hidden" name="contact[tags]" value="newsletter">
              <div
                class="newsletter-form__field-wrapper{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                {% endif %}
              >
                <div class="field">
                  <input
                    id="NewsletterForm--{{ section.id }}"
                    type="email"
                    name="contact[email]"
                    class="field__input"
                    value="{{ form.email }}"
                    aria-required="true"
                    autocorrect="off"
                    autocapitalize="off"
                    autocomplete="email"
                    {% if form.errors %}
                      autofocus
                      aria-invalid="true"
                      aria-describedby="Newsletter-error--{{ section.id }}"
                    {% elsif form.posted_successfully? %}
                      aria-describedby="Newsletter-success--{{ section.id }}"
                    {% endif %}
                    placeholder="{{ 'newsletter.label' | t }}"
                    required
                  >
                  <label class="field__label" for="NewsletterForm--{{ section.id }}">
                    {{ 'newsletter.label' | t }}
                  </label>
                  <button
                    type="submit"
                    class="newsletter-form__button field__button"
                    name="commit"
                    id="Subscribe"
                    aria-label="{{ 'newsletter.button_label' | t }}"
                  >
                    {% render 'icon-arrow' %}
                  </button>
                </div>
                {%- if form.errors -%}
                  <small class="newsletter-form__message form__message" id="Newsletter-error--{{ section.id }}">
                    {%- render 'icon-error' -%}
                    {{- form.errors.translated_fields.email | capitalize }}
                    {{ form.errors.messages.email -}}
                  </small>
                {%- endif -%}
              </div>
              {%- if form.posted_successfully? -%}
                <h3
                  class="newsletter-form__message newsletter-form__message--success form__message"
                  id="Newsletter-success--{{ section.id }}"
                  tabindex="-1"
                  autofocus
                >
                  {% render 'icon-success' -%}
                  {{- 'newsletter.success' | t }}
                </h3>
              {%- endif -%}
            {% endform %}
          </div>
      {%- endcase -%}
    {%- endfor -%}
  </div>
</div>

{% schema %}
{
  "name": "t:sections.newsletter.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "select",
      "id": "theme_color_background",
      "label": "t:settings_schema.theme_colors.settings.sections.background_color_label",
      "info": "Sets the background color",
      "options": [
        {
          "value": "theme_default",
          "label": "t:settings_schema.color_palette.settings.theme_default.label"
        },
        {
          "value": "theme-color-bg-0",
          "label": "t:settings_schema.color_palette.settings.palette_color_0.label"
        },
        {
          "value": "theme-color-bg-1",
          "label": "t:settings_schema.color_palette.settings.palette_color_1.label"
        },
        {
          "value": "theme-color-bg-2",
          "label": "t:settings_schema.color_palette.settings.palette_color_2.label"
        },
        {
          "value": "theme-color-bg-3",
          "label": "t:settings_schema.color_palette.settings.palette_color_3.label"
        },
        {
          "value": "theme-color-bg-4",
          "label": "t:settings_schema.color_palette.settings.palette_color_4.label"
        },
        {
          "value": "theme-color-bg-5",
          "label": "t:settings_schema.color_palette.settings.palette_color_5.label"
        },
        {
          "value": "theme-color-bg-6",
          "label": "t:settings_schema.color_palette.settings.palette_color_6.label"
        },
        {
          "value": "theme-color-bg-7",
          "label": "t:settings_schema.color_palette.settings.palette_color_7.label"
        }
      ],
      "default": "theme_default"
    },
    {
      "type": "select",
      "id": "theme_color_text",
      "label": "t:settings_schema.theme_colors.settings.sections.text_color_label",
      "info": "Sets the text color",
      "options": [
        {
          "value": "theme_default",
          "label": "t:settings_schema.color_palette.settings.theme_default.label"
        },
        {
          "value": "theme-color-text-0",
          "label": "t:settings_schema.color_palette.settings.palette_color_0.label"
        },
        {
          "value": "theme-color-text-1",
          "label": "t:settings_schema.color_palette.settings.palette_color_1.label"
        },
        {
          "value": "theme-color-text-2",
          "label": "t:settings_schema.color_palette.settings.palette_color_2.label"
        },
        {
          "value": "theme-color-text-3",
          "label": "t:settings_schema.color_palette.settings.palette_color_3.label"
        },
        {
          "value": "theme-color-text-4",
          "label": "t:settings_schema.color_palette.settings.palette_color_4.label"
        },
        {
          "value": "theme-color-text-5",
          "label": "t:settings_schema.color_palette.settings.palette_color_5.label"
        },
        {
          "value": "theme-color-text-6",
          "label": "t:settings_schema.color_palette.settings.palette_color_6.label"
        },
        {
          "value": "theme-color-text-7",
          "label": "t:settings_schema.color_palette.settings.palette_color_7.label"
        }
      ],
      "default": "theme_default"
    },
    {
      "type": "range",
      "id": "input_opacity",
      "label": "Background opacity for the input field",
      "min": 0,
      "max": 100,
      "default": 25
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": true,
      "label": "t:sections.newsletter.settings.full_width.label"
    },
    {
      "type": "paragraph",
      "content": "t:sections.newsletter.settings.paragraph.content"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.newsletter.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Subscribe to our emails",
          "label": "t:sections.newsletter.blocks.heading.settings.heading.label"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            }
          ],
          "default": "h1",
          "label": "t:sections.all.heading_size.label"
        }
      ]
    },
    {
      "type": "paragraph",
      "name": "t:sections.newsletter.blocks.paragraph.name",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Be the first to know about new collections and exclusive offers.</p>",
          "label": "t:sections.newsletter.blocks.paragraph.settings.paragraph.label"
        }
      ]
    },
    {
      "type": "email_form",
      "name": "t:sections.newsletter.blocks.email_form.name",
      "limit": 1
    },
    {
      "type": "@app"
    }
  ],
  "presets": [
    {
      "name": "t:sections.newsletter.presets.name",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "paragraph"
        },
        {
          "type": "email_form"
        }
      ]
    }
  ]
}
{% endschema %}
